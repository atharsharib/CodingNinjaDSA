class Deque {
    // Complete this class
    int* arr;
    int front;
    int rear;
    int size;
    
    public:
    
    Deque(int size){
        arr=new int[size];
        front=-1;
        rear=-1;
        this->size=size;
    }
    
    void insertFront(int val){// [1->2->3.....]
        if(front==-1 && rear==-1){
            front=0;
            rear=0;
            arr[front]=val;
            return;
        }
        if((front+1)%size==rear){
            cout<<-1<<endl;
            return;
        } 
        front=(front+1)%size;
        arr[front]=val;
    }
    
    void insertRear(int val){//[<-1........<-3<-2]
       if(front==-1 && rear==-1){
            front=0;
            rear=0;
            arr[rear]=val;
            return;
        }
        if((rear-1)%size==front){
            cout<<-1<<endl;
            return;
        } 
        if(rear==0) rear=size-1;
        else rear-=1;
        arr[rear]=val;
    }
    void deleteFront(){
        if(front==-1){
            cout<<-1<<endl;
            return;
        }
        if(rear==front){
            rear = -1;
            front = -1;
            return;
        }    
        if(front==0) front=size-1;
        else front-=1;
    }
    
    void deleteRear(){
        if(rear==-1){
            cout<<-1<<endl;
            return;
        } 
        if(rear==front){
            rear = -1;
            front = -1;
            return; 
        }
        rear=(rear+1)%size;
    }
    
    
    int getFront(){
        if(front==-1){
            return -1;
        } 
        return arr[front];
    }
    int getRear(){
        if(rear==-1){
            return -1;
        } 
        return arr[rear];
    }    
    
};
