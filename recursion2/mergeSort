Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.
Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8



void swap(int a , int b){
    int t=a;
    a=b;
    b=t;
    return;
    
}
void merge(int input[] , int s , int mid , int e){
    int i=s;
    int j=mid+1;

    int arr[s+e+1]={0};
    int k=s;
    while(i<=mid && j<=e){
        if(input[i]>input[j]){
              arr[k]=input[j];
              j++;k++;
        }else{
             arr[k]=input[i];
            i++;k++;
        } 
        
        
    }
    while(i<=mid){
        arr[k]=input[i];k++; 
        i++;
    }
    while(j<=e){
        arr[k]=input[j];k++; 
        j++;
    }
    for(int l=s;l<=e ;l++){
        input[l]=arr[l];
    }

    return ;
}


void helper(int input[] , int s , int e){
    if(s>=e) return ;
    int mid = (s+e)/2;
    helper(input , s , mid);
    helper(input , mid +1 , e);
    merge(input , s , mid ,e);
    
}


void mergeSort(int input[], int size){
    int s=0;
	 helper(input , s , size-1);
     return ;
        
}
