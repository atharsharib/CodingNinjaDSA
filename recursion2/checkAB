Suppose you have a string, S, made up of only 'a's and 'b's. Write a recursive function that checks if the string was generated using the following rules:
a. The string begins with an 'a'
b. Each 'a' is followed by nothing or an 'a' or "bb"
c. Each "bb" is followed by nothing or an 'a'
If all the rules are followed by the given string, return true otherwise return false.
Input format :
String S
Output format :
'true' or 'false'
Constraints :
1 <= |S| <= 1000
where |S| represents length of string S.
Sample Input 1 :
abb
Sample Output 1 :
true



bool checkABhelper(char input[], int startindex){
    if(input[startindex] == '\0'){
        return true;
    }
  

	if(input[startindex]!='a'){
        return false;
    }
    if(input[startindex + 1] == 'b'&&input[startindex + 2] == 'b'){
        return checkABhelper(input, startindex + 3);
    }
  return checkABhelper(input, startindex + 1);
}
bool checkAB(char input[]) {
	//check whether the length of input is 0
    if(input[0]=='\0'){
        return true;
    }
    if(input[0]!='a'){
        return false;
    }
    int startindex = 0;
    return checkABhelper(input,startindex);
    

}
